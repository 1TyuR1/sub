services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_NAME:-subscriptions}
    ports:
      - "5432:5432"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-subscriptions}",
        ]
      interval: 3s
      timeout: 3s
      retries: 10
    volumes:
      - pgdata:/var/lib/postgresql/data

  migrator:
    image: migrate/migrate:4
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./db/migrations:/migrations:ro
    entrypoint: ["/usr/bin/migrate"]
    command:
      - -path=/migrations
      - -database=postgres://${DB_USER:-postgres}:${DB_PASSWORD:-postgres}@db:5432/${DB_NAME:-subscriptions}?sslmode=disable
      - up
    restart: "no"

  app:
    build: .
    environment:
      ENV: ${ENV:-local}
      HTTP_PORT: ${HTTP_PORT:-8080}
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: ${DB_USER:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-postgres}
      DB_NAME: ${DB_NAME:-subscriptions}
      DB_SSLMODE: disable
    depends_on:
      migrator:
        condition: service_completed_successfully
    ports:
      - "${HTTP_PORT:-8080}:8080"

volumes:
  pgdata: {}
